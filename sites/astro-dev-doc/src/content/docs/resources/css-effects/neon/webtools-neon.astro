---
// Copyright (c) Pascal Brand
// MIT License

import './webtools-neon.scss'

import type { HTMLAttributes } from 'astro/types';

type propsToVarsT = {var: string, prop:string}[]
const propsToVars: propsToVarsT = [
  { var: '--wt-neon-R',      prop: "colorR"},
  { var: '--wt-neon-G',      prop: "colorG"},
  { var: '--wt-neon-B',      prop: "colorB"},
  { var: '--wt-neon-speed',  prop: "speed" },
  { var: '--wt-neon-rotate', prop: "rotate"},
]
interface PrivateProps {
  colorR ?: string,
  colorG ?: string,
  colorB ?: string,
  speed ?: string,
  rotate ?: string,
}

interface Props extends HTMLAttributes<"div">, PrivateProps {}

const {
  class: className = '',
  style = '',
  ...props
} = Astro.props;

// props is updated
function webtoolsCreateVarStyle(styleProps:string | astroHTML.JSX.CSSProperties | null, props:any, propsToVars:propsToVarsT) {
  let style = styleProps;
  propsToVars.forEach((propToVar:any) => {
    if (props[propToVar.prop]) {
      style += `${propToVar.var}:${props[propToVar.prop]};`
      delete props[propToVar.prop]
    }
  })
  return style
}

---

<div
  style=`${webtoolsCreateVarStyle(style, props, propsToVars)}`
  class={className + " webtools-neon webtools-neon__container"}
  {...props}>
    <slot/>
</div>
